a graph is a pair of sets (V, E), where V is the set of vertices and E is the set of edges, 
connecting the pairs of vertices
Example: a__________b
		 |          |
		 |			|
		 |			|
		 |__________|___________
		c			d			e

		V = {a,b,c,d,e}
		E = {ab,ac,bd,cd,de}
Adjacency − Two node or vertices are adjacent if they are connected to each other through an edge. 
In the following example, B is adjacent to A, C is adjacent to B, and so on. 
**adjancency is means different than what it suggests. also, if you think about, since we are not
specifying the diagram defining adjacency in its literal sense wont make sense**

Path represents a sequence of edges between the two vertices.

DFS:
Rule 1 − Visit the adjacent unvisited vertex. Mark it as visited. Display it. Push it in a stack.

Rule 2 − If no adjacent vertex is found, pop up a vertex from the stack. (It will pop up all the vertices from the stack, which do not have adjacent vertices.)

Rule 3 − Repeat Rule 1 and Rule 2 until the stack is empty.
Illustrate with stack

BFS:

Rule 1 − Visit the adjacent unvisited vertex. Mark it as visited. Display it. Insert it in a queue.

Rule 2 − If no adjacent vertex is found, remove the first vertex from the queue.

Rule 3 − Repeat Rule 1 and Rule 2 until the queue is empty.

Illustration with queue


Can we use stack for BFS? 
I think yes, only the order in which vertices are visited will be changes. 