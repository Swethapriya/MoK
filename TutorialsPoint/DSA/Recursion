if you dont understand recursion read this again

To avoid infinite running of recursive function, there are two properties that a recursive function must have −

Base criteria − 
There must be at least one base criteria or condition, such that, 
when this condition is met the function stops calling itself recursively.

Progressive approach − The recursive calls should progress in such a way that 
each time a recursive call is made it comes closer to the base criteria.

Many programming languages implement recursion by means of stacks. 
insert image
 an activation record (or stack frame) is created for the caller function.
 This activation record keeps the information about local variables, formal parameters, 
 return address and all information passed to the caller function.

 The first reason is,
 recursion makes a program more readable and 
 because of latest enhanced CPU systems, recursion is more efficient than iterations.

 in case of recursion, the system needs to store activation record each time a recursive call is made.
 Hence, it is considered that space complexity of recursive function may go higher than that of a function with iteration.

 Tower of Hanoi:
 a mathematical puzzle which consists of three towers (pegs) and more than one rings
 
 The mission is to move all the disks to some another tower without violating the sequence of arrangement. 
 A few rules to be followed for Tower of Hanoi are −

Only one disk can be moved among the towers at any given time.
Only the "top" disk can be removed.
No large disk can sit over a small disk.

Tower of Hanoi puzzle with n disks can be solved in minimum 2^n−1 steps

Step 1 − Move n-1 disks from source to aux
Step 2 − Move nth disk from source to dest
Step 3 − Move n-1 disks from aux to dest

Fibanocci series:

Fibonacci series generates the subsequent number by adding two previous numbers.
Fibonacci series starts from two numbers − F0 & F1. The initial values of F0 & F1 can be taken 0, 1 or 1, 1 respectively.